<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <node unique_id="4" master_id="0" name="Basic Tools" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1742546029" ts_lastsave="1742546916">
    <rich_text>
</rich_text>
    <rich_text scale="h2">Using SSH</rich_text>
    <rich_text>

</rich_text>
    <rich_text link="webs https://en.wikipedia.org/wiki/SSH_(Secure_Shell)">Secure Shell (SSH)</rich_text>
    <rich_text> is a network protocol that runs on port </rich_text>
    <rich_text family="monospace">22</rich_text>
    <rich_text> by default and provides users such 
as system administrators a secure way to access a computer remotely. SSH can be configured with 
password authentication or passwordless using </rich_text>
    <rich_text link="webs https://serverpilot.io/docs/how-to-use-ssh-public-key-authentication/">public-key authentication</rich_text>
    <rich_text> using an SSH public/private key pair. 
SSH can be used to remotely access systems on the same network, over the internet, facilitate connections to 
resources in other networks using port forwarding/proxying, and upload/download files to and from remote systems.






</rich_text>
    <rich_text scale="h2">Using Netcat</rich_text>
    <rich_text>

</rich_text>
    <rich_text link="webs https://linux.die.net/man/1/nc">Netcat</rich_text>
    <rich_text>, </rich_text>
    <rich_text family="monospace">ncat</rich_text>
    <rich_text>, or </rich_text>
    <rich_text family="monospace">nc</rich_text>
    <rich_text>, is an excellent network utility for interacting with TCP/UDP ports. It can be used 
for many things during a pentest. Its primary usage is for connecting to shells, which we'll discuss 
later in this module. In addition to that, </rich_text>
    <rich_text family="monospace">netcat</rich_text>
    <rich_text> can be used to connect to any listening port and interact 
with the service running on that port. For example, </rich_text>
    <rich_text family="monospace">SSH</rich_text>
    <rich_text> is programmed to handle connections over port 22 
to send all data and keys. We can connect to TCP port 22 with </rich_text>
    <rich_text family="monospace">netcat</rich_text>
    <rich_text>:





</rich_text>
    <rich_text scale="h2">Using Tmux</rich_text>
    <rich_text>


Terminal multiplexers, like </rich_text>
    <rich_text family="monospace">tmux</rich_text>
    <rich_text> or </rich_text>
    <rich_text family="monospace">Screen</rich_text>
    <rich_text>, are great utilities for expanding a standard Linux terminal's features, 
like having multiple windows within one terminal and jumping between them. Let's see some examples of using 
</rich_text>
    <rich_text family="monospace">tmux</rich_text>
    <rich_text>, which is the more common of the two. If </rich_text>
    <rich_text family="monospace">tmux</rich_text>
    <rich_text>  is not present on our Linux system, we can install it with the following command:






</rich_text>
    <rich_text scale="h2">Using Vim</rich_text>
    <rich_text>


</rich_text>
    <rich_text link="webs https://linuxcommand.org/lc3_man_pages/vim1.html">Vim</rich_text>
    <rich_text> is a great text editor that can be used for writing code or editing text files on Linux systems. 
One of the great benefits of using </rich_text>
    <rich_text family="monospace">Vim</rich_text>
    <rich_text> is that it relies entirely on the keyboard, so you do not have 
to use the mouse, which (once we get the hold of it) will significantly increase your productivity and 
efficiency in writing/editing code. We usually find </rich_text>
    <rich_text family="monospace">Vim</rich_text>
    <rich_text> or </rich_text>
    <rich_text family="monospace">Vi</rich_text>
    <rich_text> installed on compromised Linux systems, 
so learning how to use it allows us to edit files even on remote systems. </rich_text>
    <rich_text family="monospace">Vim</rich_text>
    <rich_text> also has many other features, 
like extensions and plugins, which can significantly extend its usage and make for a great code editor. Let's see 
some of the basics of </rich_text>
    <rich_text family="monospace">Vim</rich_text>
    <rich_text>. To open a file with </rich_text>
    <rich_text family="monospace">Vim</rich_text>
    <rich_text>, we can add the file name after it:



Once we are finished editing a file, we can hit the escape key </rich_text>
    <rich_text family="monospace">esc</rich_text>
    <rich_text> to get out of </rich_text>
    <rich_text family="monospace">insert mode</rich_text>
    <rich_text>, back into </rich_text>
    <rich_text family="monospace">normal mode</rich_text>
    <rich_text>. When we are in </rich_text>
    <rich_text family="monospace">normal mode</rich_text>
    <rich_text>, we can use the following keys to perform some useful shortcuts:



</rich_text>
    <encoded_png char_offset="543" justification="left" link="" sha256sum="dbada7d5d175bf7974101e0b83665488884219d98f456edcf01b030062691d3b"/>
    <encoded_png char_offset="1055" justification="left" link="" sha256sum="88a1919907fa56260a7009f7f9bc80c5e1fb697812feaea0ca2e9ceeca2ecd4e"/>
    <encoded_png char_offset="1434" justification="left" link="" sha256sum="70d7a1f13780812a066c0d8567f9da7a9fcbfdbe31899d8506a4bb6fff805b06"/>
    <encoded_png char_offset="2176" justification="left" link="" sha256sum="aaec4f8e673e71af0ded0a2a26273fed28e5428369a768d7def3f5c6b1cf4409"/>
    <encoded_png char_offset="2389" justification="left" link="" sha256sum="1c3d30ea5c85b4e86f970c140ae22a58864ead67cb6eb1a3df57099d9784d212"/>
  </node>
</cherrytree>
